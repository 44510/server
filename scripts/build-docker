#!/bin/bash

##############################
# Builds the docker image from a pre-built build directory
# Arguments: 
#   1: Project Name
#   2: Project Directory
#   3: Docker Tag
#   4: Docker push
# Outputs: 
#   Output to STDOUT or STDERR.
# Returns: 
#   Returned values other than the default exit status of the last command run.
##############################
docker_build() {
  local project_name=$1
  local project_dir=$2
  local docker_tag=$3
  local docker_push=$4

  local project_name_lower=$(echo "$project_name" | awk '{print tolower($0)}')

  echo "Building docker image: bitwarden/$project_name_lower:$docker_tag"
  echo "=============================="
  docker build -t bitwarden/$project_name_lower:$docker_tag $project_dir

  if [ "$docker_push" == "1" ]; then
    docker push bitwarden/$project_name_lower:$docker_tag $project_dir
  fi
}

# Get Project
PROJECT=$1; shift

# Get Params
TAG="latest"
PUSH=0

while [ ! $# -eq 0 ]; do
  case "$1" in
    -t | --tag)
      if [[ $2 ]]; then
        TAG="$2"
        shift
      else
        exp "--tag requires a value"
      fi
      ;;
    --push) PUSH=1 ;;
    -h | --help ) usage && exit ;;
    *) usage && exit ;;
  esac
  shift
done


case "$PROJECT" in
  "admin" | "Admin") docker_build Admin $PWD/docker/admin $TAG $PUSH ;;
  "api" | "Api") docker_build Api $PWD/docker/api $TAG $PUSH ;;
  "attachments" | "Attachments") docker_build Attachments $PWD/docker/attachments $TAG $PUSH ;;
  #"billing" | "Billing") docker_build Billing $PWD/docker/billing $TAG $PUSH ;;
  "events" | "Events") docker_build Events $PWD/docker/events $TAG $PUSH ;;
  "eventsprocessor" | "EventsProcessor") docker_build EventsProcessor $PWD/docker/eventsprocessor $TAG $PUSH ;;
  "icons" | "Icons") docker_build Icons $PWD/docker/icons $TAG $PUSH ;;
  "identity" | "Identity") docker_build Identity $PWD/docker/identity $TAG $PUSH ;;
  "nginx" | "Nginx") docker_build Nginx $PWD/docker/nginx $TAG $PUSH ;;
  "notifications" | "Notifications") docker_build Notifications $PWD/docker/notifications $TAG $PUSH ;;
  "server" | "Server") docker_build Server $PWD/docker/server $TAG $PUSH ;;
  "sso" | "Sso") docker_build Sso $PWD/docker/sso $TAG $PUSH ;;
  "")
    docker_build Admin $PWD/docker/admin $TAG $PUSH
    docker_build Api $PWD/docker/api $TAG $PUSH
    docker_build Attachments $PWD/docker/attachments $TAG $PUSH
    #docker_build Billing $PWD/docker/billing $TAG $PUSH
    docker_build Events $PWD/docker/events $TAG $PUSH
    docker_build EventsProcessor $PWD/docker/eventsprocessor $TAG $PUSH
    docker_build Icons $PWD/docker/icons $TAG $PUSH
    docker_build Identity $PWD/docker/identity $TAG $PUSH
    docker_build Nginx $PWD/docker/nginx $TAG $PUSH
    docker_build Notifications $PWD/docker/notifications $TAG $PUSH
    docker_build Server $PWD/docker/server $TAG $PUSH
    docker_build Sso $PWD/docker/sso $TAG $PUSH
  ;;
esac
